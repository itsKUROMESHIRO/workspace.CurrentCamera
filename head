local inputservice = game:GetService("UserInputService")

-- Dictionary of FFlags and their values
local fflags = {
    FFlagNewLightAttenuation = "True",
    FFlagDebugSkyGray = "True",
    FIntDebugTextureManagerSkipMips = "8",
    FIntRenderShadowIntensity = "False",
    FFlagDisablePostFx = "True",
    DFIntTrackCountryRegionAPIHundredthsPercent = "10000",
    FFlagDebugForceDisableShadows = "True",
    FFlagDebugDisableRenderingPostEffects = "True",
    FFlagDebugDisableLightingTechnologyFeatures = "True",
    FFlagDebugDisableMaterialSpecular = "True",
    FFlagDebugForceLowGraphics = "True",
    FFlagDebugDisablePhysicsLOD = "True",
    FFlagDebugForceDisable3DRendering = "False",
    FFlagDebugDisableLODFoliage = "True",
    DFIntLargePacketQueueSizeCutoffMB = "1000",
    DFIntMaxProcessPacketsJobScaling = "10000",
    DFIntMaxProcessPacketsStepsAccumulated = "0",
    DFIntMaxProcessPacketsStepsPerCyclic = "5000",
    DFIntMegaReplicatorNetworkQualityProcessorUnit = "10",
    DFIntRakNetClockDriftAdjustmentPerPingMillisecond = "100",
    DFIntRaknetBandwidthInfluxHundredthsPercentageV2 = "10000",
    DFIntCodecMaxIncomingPackets = "100",
    DFIntCodecMaxOutgoingFrames = "10000"
}


-- Apply FFlags
for flag, value in pairs(fflags) do
    local fflag = flag:gsub('DFInt', ''):gsub('DFFlag', ''):gsub('FFlag', ''):gsub('FInt', ''):gsub('DFString', ''):gsub('FString', '')
    value = tostring(value):gsub('"True"', 'true'):gsub('"False"', 'false')

    if getfflag(fflag) ~= nil then
        pcall(setfflag, fflag, value)
    end
end

-- Function to remove post-processing effects, including Bloom
local function removePostProcessing()
    local lighting = game:GetService("Lighting")
    for _, effect in ipairs(lighting:GetChildren()) do
        if effect:IsA("BloomEffect") or effect:IsA("BlurEffect") or effect:IsA("SunRaysEffect") 
        or effect:IsA("ColorCorrectionEffect") or effect:IsA("DepthOfFieldEffect") then
            effect:Destroy()
        end
    end
end

-- Function to disable shadows, fog, and reflections
local function disableLightingEffects()
    local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false  -- Disable shadows
    lighting.FogEnd = 100000         -- Remove fog by setting high FogEnd
    lighting.FogStart = 99999
    lighting.FogColor = Color3.new(1, 1, 1)  -- Set fog to white (optional)
    lighting.Brightness = 2          -- Increase brightness for visibility
    lighting.EnvironmentSpecularScale = 0  -- Remove reflections
    lighting.EnvironmentDiffuseScale = 0   -- Remove indirect light effects
end

-- Disable terrain decoration
local function disableTerrainDecoration()
    local terrain = workspace:FindFirstChildOfClass("Terrain")
    if terrain then
        pcall(function()
            sethiddenproperty(terrain, "Decoration", false)
        end)
    end
end

-- Execute optimizations
task.spawn(removePostProcessing)
task.spawn(disableLightingEffects)
task.spawn(disableTerrainDecoration)

-- Handle new objects efficiently
workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("BloomEffect") or obj:IsA("BlurEffect") or obj:IsA("SunRaysEffect") 
    or obj:IsA("ColorCorrectionEffect") or obj:IsA("DepthOfFieldEffect") then
        task.spawn(function()
            obj:Destroy()
        end)
    end
end)
