local inputservice = game:GetService("UserInputService")

-- Dictionary of FFlags and their values
local fflags = {
    FFlagNewLightAttenuation = "True",
    FFlagDebugSkyGray = "True",
    FIntDebugTextureManagerSkipMips = "-1",
    FIntRenderShadowIntensity = "False",
    FFlagDisablePostFx = "True"
}

-- Apply FFlags
for flag, value in pairs(fflags) do
    local fflag = flag:gsub('DFInt', ''):gsub('DFFlag', ''):gsub('FFlag', ''):gsub('FInt', ''):gsub('DFString', ''):gsub('FString', '')
    value = tostring(value):gsub('"True"', 'true'):gsub('"False"', 'false')

    if getfflag(fflag) ~= nil then
        pcall(setfflag, fflag, value)
    end
end

-- Function to batch-remove unwanted objects
local function removeUnwantedObjects()
    local toDestroy = {}  -- Use table to collect objects first
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Fire") or obj:IsA("Smoke") or obj:IsA("Sparkles") or
           (obj:IsA("Part") and obj.Material == Enum.Material.Grass) or
           (obj:IsA("MeshPart") and obj.Material == Enum.Material.Grass) or
           (obj:IsA("Decal") and obj.Texture and string.find(obj.Texture:lower(), "grass")) then
            table.insert(toDestroy, obj)
        end
    end
    for _, obj in ipairs(toDestroy) do  -- Destroy all at once
        obj:Destroy()
    end
end

-- Function to optimize terrain modification
local function optimizeTerrain()
    local terrain = workspace:FindFirstChildOfClass("Terrain")
    if terrain then
        terrain:FillRegion(terrain.MaxExtents, Enum.Material.Ground)  -- Replace grass with ground
    end
end

-- Disable terrain decoration
local function disableTerrainDecoration()
    local terrain = workspace:FindFirstChildOfClass("Terrain")
    if terrain then
        pcall(function()
            sethiddenproperty(terrain, "Decoration", false)
        end)
    end
end

-- Function to handle new unwanted objects efficiently
local function handleNewObjects(obj)
    if obj:IsA("ParticleEmitter") or obj:IsA("Fire") or obj:IsA("Smoke") or obj:IsA("Sparkles") or
       (obj:IsA("Part") and obj.Material == Enum.Material.Grass) or
       (obj:IsA("MeshPart") and obj.Material == Enum.Material.Grass) or
       (obj:IsA("Decal") and obj.Texture and string.find(obj.Texture:lower(), "grass")) then
        task.defer(function() obj:Destroy() end) -- Defer to avoid lag spikes
    end
end

-- Execute optimizations
task.spawn(removeUnwantedObjects)
task.spawn(optimizeTerrain)
task.spawn(disableTerrainDecoration)

-- Single connection to handle new objects efficiently
workspace.DescendantAdded:Connect(handleNewObjects)
